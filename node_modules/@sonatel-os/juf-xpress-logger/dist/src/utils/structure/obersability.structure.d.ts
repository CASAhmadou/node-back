export const CaptureApmMiddlewareConfig: import("superstruct").Struct<{
    callback: Function;
    params: {
        path: string;
        method: string;
        headers: Record<string, unknown>;
        routeParams?: any;
        queryParams?: any;
        payload?: any;
    };
    httpListener?: {
        onFunction?: Function | undefined;
        callback?: Function | undefined;
    } | undefined;
}, {
    params: import("superstruct").Struct<{
        path: string;
        method: string;
        headers: Record<string, unknown>;
        routeParams?: any;
        queryParams?: any;
        payload?: any;
    }, {
        path: import("superstruct").Struct<string, null>;
        method: import("superstruct").Struct<string, null>;
        headers: import("superstruct").Struct<Record<string, unknown>, null>;
        routeParams: import("superstruct").Struct<any, null>;
        queryParams: import("superstruct").Struct<any, null>;
        payload: import("superstruct").Struct<any, null>;
    }>;
    callback: import("superstruct").Struct<Function, null>;
    httpListener: import("superstruct").Struct<{
        onFunction?: Function | undefined;
        callback?: Function | undefined;
    } | undefined, {
        onFunction: import("superstruct").Struct<Function | undefined, null>;
        callback: import("superstruct").Struct<Function | undefined, null>;
    }>;
}>;
export const StartTransactionSpanConfig: import("superstruct").Struct<{
    spanName: string;
    spanType: string;
    payload?: Record<string, unknown> | undefined;
}, {
    spanName: import("superstruct").Struct<string, null>;
    spanType: import("superstruct").Struct<string, null>;
    payload: import("superstruct").Struct<Record<string, unknown> | undefined, null>;
}>;
